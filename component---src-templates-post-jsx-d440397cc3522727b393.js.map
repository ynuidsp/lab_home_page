{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["SuggestionBar","props","theme","colors","white","light","shadow","suggestion","PostSuggestion","Post","data","pageContext","next","prev","markdownRemark","html","frontmatter","excerpt","date","title","tags","path","description","image","cover","childImageSharp","fluid","banner","pathname","article","input","list","to","query"],"mappings":"0LAQMA,G,OAAa,mHAIH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,QAJ/B,gBAKH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,aALzB,MAObC,EAAc,4HAgDLC,UA1CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KADwB,EAEAH,EAAKI,eAApCC,EAF+B,EAE/BA,KAAMC,EAFyB,EAEzBA,YAAaC,EAFY,EAEZA,QACnBC,EAAwCF,EAAxCE,KAAMC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,KAAMC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,YAC1BC,EAAQP,EAAYQ,MAAMC,gBAAgBC,MAEhD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEP,MAAOA,EACPG,YAAaA,GAAeL,GAAW,IACvCU,OAAQJ,EACRK,SAAUP,EACVQ,SAAO,IAET,YAAC,IAAD,CAAQV,MAAOA,EAAOD,KAAMA,EAAMM,MAAOD,IACzC,YAAC,IAAD,KACE,YAAC,IAAD,CAASO,MAAOf,IAChB,YAAC,IAAD,CAAWgB,KAAMX,GAAQ,MAE3B,YAACpB,EAAD,KACE,YAACQ,EAAD,KACGK,GACC,YAAC,OAAD,CAAMmB,GAAInB,EAAKG,YAAYK,MAA3B,WAEE,sBAAKR,EAAKG,YAAYG,SAI5B,YAACX,EAAD,KACGI,GACC,YAAC,OAAD,CAAMoB,GAAIpB,EAAKI,YAAYK,MAA3B,OAEE,sBAAKT,EAAKI,YAAYG,YAmB7B,IAAMc,EAAK","file":"component---src-templates-post-jsx-d440397cc3522727b393.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Container, Content } from 'layouts';\r\nimport { TagsBlock, Header, SEO } from 'components';\r\nimport '../styles/prism';\r\n\r\nconst SuggestionBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  background: ${props => props.theme.colors.white.light};\r\n  box-shadow: ${props => props.theme.shadow.suggestion};\r\n`;\r\nconst PostSuggestion = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 3rem 0 3rem;\r\n`;\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { next, prev } = pageContext;\r\n  const {html, frontmatter, excerpt } = data.markdownRemark\r\n  const {date, title, tags, path, description} = frontmatter\r\n  const image = frontmatter.cover.childImageSharp.fluid;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={title}\r\n        description={description || excerpt || ' '}\r\n        banner={image}\r\n        pathname={path}\r\n        article\r\n      />\r\n      <Header title={title} date={date} cover={image} />\r\n      <Container>\r\n        <Content input={html} />\r\n        <TagsBlock list={tags || []} />\r\n      </Container>\r\n      <SuggestionBar>\r\n        <PostSuggestion>\r\n          {prev && (\r\n            <Link to={prev.frontmatter.path}>\r\n              Previous\r\n              <h3>{prev.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n        <PostSuggestion>\r\n          {next && (\r\n            <Link to={next.frontmatter.path}>\r\n              Next\r\n              <h3>{next.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n      </SuggestionBar>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nPost.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    prev: PropTypes.object,\r\n    next: PropTypes.object,\r\n  }).isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        tags\r\n        cover {\r\n          childImageSharp {\r\n            fluid(\r\n              maxWidth: 1920\r\n              quality: 90\r\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\r\n            ) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n            resize(width: 1200, quality: 90) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}