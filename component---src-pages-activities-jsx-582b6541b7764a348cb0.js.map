{"version":3,"sources":["webpack:///./src/pages/activities.jsx"],"names":["PostWrapper","Activities","edges","data","allMarkdownRemark","title","map","node","id","excerpt","frontmatter","cover","path","date","key","childImageSharp","fluid","query"],"mappings":"oMAQMA,EAAW,sRAuCFC,UA1BI,SAAC,GAAY,IACpBC,EADmB,EAAVC,KACMC,kBAAfF,MACR,OACF,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,oBACf,YAAC,IAAD,CAAQA,MAAM,mBAAd,qEACE,YAACL,EAAD,KACGE,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEJC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,YACbC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,KAAMP,EAAgBK,EAAhBL,MAAOQ,EAASH,EAATG,KAC5B,OACE,YAAC,IAAD,CACEC,IAAKN,EACLG,MAAOA,EAAMI,gBAAgBC,MAC7BJ,KAAMA,EACNP,MAAOA,EACPQ,KAAMA,EACNJ,QAASA,UAgCd,IAAMQ,EAAK","file":"component---src-pages-activities-jsx-582b6541b7764a348cb0.js","sourcesContent":["import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql } from 'gatsby';\r\nimport { Header } from 'components';\r\nimport { Layout } from 'layouts';\r\nimport styled from '@emotion/styled';\r\nimport { PostList } from 'components';\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin: 4rem 4rem 1rem 4rem;\r\n  @media (max-width: 1000px) {\r\n    margin: 4rem 2rem 1rem 2rem;\r\n  }\r\n  @media (max-width: 700px) {\r\n    margin: 4rem 1rem 1rem 1rem;\r\n  }\r\n`;\r\nconst Activities = ({data}) => {\r\n    const { edges } = data.allMarkdownRemark;\r\n    return (\r\n  <Layout>\r\n    <Helmet title={'Activities Page'} />\r\n    <Header title=\"Activities Page\">we are not only focus on research, but funny group activities... </Header>\r\n      <PostWrapper>\r\n        {edges.map(({ node }) => {\r\n        //   console.log(edges)\r\n          const { id, excerpt, frontmatter } = node;\r\n          const { cover, path, title, date } = frontmatter;\r\n          return (\r\n            <PostList\r\n              key={id}\r\n              cover={cover.childImageSharp.fluid}\r\n              path={path}\r\n              title={title}\r\n              date={date}\r\n              excerpt={excerpt}\r\n            />\r\n          );\r\n        })}\r\n      </PostWrapper>\r\n  </Layout>\r\n)};\r\n\r\nexport default Activities;\r\n\r\nActivities.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            excerpt: PropTypes.string,\r\n            frontmatter: PropTypes.shape({\r\n              cover: PropTypes.object.isRequired,\r\n              path: PropTypes.string.isRequired,\r\n              title: PropTypes.string.isRequired,\r\n              date: PropTypes.string.isRequired,\r\n              tags: PropTypes.array,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\n  \r\n  export const query = graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        limit: 6\r\n        sort: { order: DESC, fields: [frontmatter___date] }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            excerpt(pruneLength: 75)\r\n            frontmatter {\r\n              title\r\n              path\r\n              tags\r\n              date(formatString: \"MM.DD.YYYY\")\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(\r\n                    maxWidth: 1000\r\n                    quality: 90\r\n                    traceSVG: { color: \"#2B2B2F\" }\r\n                  ) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  "],"sourceRoot":""}