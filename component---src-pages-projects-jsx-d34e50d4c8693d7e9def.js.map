{"version":3,"sources":["webpack:///./src/pages/projects.jsx"],"names":["Projects","edges","data","allMarkdownRemark","title","map","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","query"],"mappings":"6LA6BiBA,UAtBA,SAAC,GAAc,IACpBC,EADmB,EAAXC,KACOC,kBAAfF,MACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,kBACf,YAAC,IAAD,CAAQA,MAAM,iBAAd,wBACA,YAAC,IAAD,kCACCH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBT,MAAOE,EAAKI,YAAYN,MACxBU,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,eA8BjB,IAAMC,EAAK","file":"component---src-pages-projects-jsx-d34e50d4c8693d7e9def.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, ProjectList } from 'components';\r\nimport { Layout,Container } from 'layouts';\r\n\r\nconst Projects = ({ data }) => {\r\n    const { edges } = data.allMarkdownRemark;\r\n    return (\r\n      <Layout>\r\n        <Helmet title={'Projects Page'} />\r\n        <Header title=\"Projects Page\">we are working on it</Header>\r\n        <Container >this is what we are doing</Container>\r\n        {edges.map(({ node }) => (\r\n          <ProjectList\r\n            key={node.id}\r\n            cover={node.frontmatter.cover.childImageSharp.fluid}\r\n            path={node.frontmatter.path}\r\n            title={node.frontmatter.title}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n            excerpt={node.excerpt}\r\n          />\r\n        ))}\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n  export default Projects;\r\n  \r\n  Projects.propTypes = {\r\n    data: PropTypes.shape({\r\n      allMarkdownRemark: PropTypes.shape({\r\n        edges: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            node: PropTypes.shape({\r\n              excerpt: PropTypes.string,\r\n              frontmatter: PropTypes.shape({\r\n                cover: PropTypes.object.isRequired,\r\n                path: PropTypes.string.isRequired,\r\n                title: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n                tags: PropTypes.array,\r\n              }),\r\n            }),\r\n          }).isRequired\r\n        ),\r\n      }),\r\n    }),\r\n  };\r\n  \r\n  export const query = graphql`\r\n    query {\r\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n        edges {\r\n          node {\r\n            id\r\n            excerpt(pruneLength: 200)\r\n            frontmatter {\r\n              title\r\n              path\r\n              tags\r\n              date(formatString: \"MM.DD.YYYY\")\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(\r\n                    maxWidth: 1000\r\n                    quality: 90\r\n                    traceSVG: { color: \"#2B2B2F\" }\r\n                  ) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  \r\n\r\n\r\n// const Projects = center => (\r\n//   <Layout>\r\n//     <Helmet title={'Projects Page'} />\r\n//     <Header title=\"Projects Page\">Comming soon</Header>\r\n//     <Container center={center}>\r\n//       <h3>\r\n//           We are wokring on...\r\n//         {/* If you would like to build this site completely from scratch, you can\r\n//         read the guide{' '}\r\n//         <a href=\"https://justinformentin.com/gatsby-v2-guide\">here.</a> */}\r\n//       </h3>\r\n//     </Container>\r\n//   </Layout>\r\n// );\r\n\r\n// export default Projects;\r\n\r\n// Projects.propTypes = {\r\n//   center: PropTypes.object,\r\n// };\r\n"],"sourceRoot":""}